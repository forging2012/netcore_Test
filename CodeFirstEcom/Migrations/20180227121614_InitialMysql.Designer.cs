// <auto-generated />
using CodeFirstEcom;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CodeFirstEcom.Migrations
{
    [DbContext(typeof(ecomContext))]
    [Migration("20180227121614_InitialMysql")]
    partial class InitialMysql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("CodeFirstEcom.BbsAddr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Addr");

                    b.Property<int>("BuyerId");

                    b.Property<string>("City");

                    b.Property<sbyte>("IsDef");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("BbsAddr");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImgUrl");

                    b.Property<sbyte?>("IsDisplay");

                    b.Property<string>("Name");

                    b.Property<int?>("Sort");

                    b.Property<string>("WebSite");

                    b.HasKey("Id");

                    b.ToTable("BbsBrand");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsBuyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Addr");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<sbyte?>("IsDel");

                    b.Property<string>("Password");

                    b.Property<string>("Province");

                    b.Property<string>("RealName");

                    b.Property<DateTime?>("RegisterTime");

                    b.Property<string>("Town");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("BbsBuyer");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.Property<string>("Province");

                    b.HasKey("Id");

                    b.ToTable("BbsCity");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("BbsColor");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("Color");

                    b.Property<int>("OrderId");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductNo");

                    b.Property<string>("Size");

                    b.Property<double>("SkuPrice");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("BbsDetail");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Degree");

                    b.Property<string>("Email");

                    b.Property<sbyte?>("Gender");

                    b.Property<string>("ImgUrl");

                    b.Property<sbyte>("IsDel");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("RealName");

                    b.Property<string>("School");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("BbsEmployee");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<sbyte?>("IsDel");

                    b.Property<string>("Name");

                    b.Property<int?>("Sort");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("BbsFeature");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<sbyte?>("IsDef");

                    b.Property<int?>("ProductId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("BbsImg");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyerId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<decimal>("DeliverFee");

                    b.Property<sbyte?>("Delivery");

                    b.Property<sbyte?>("IsConfirm");

                    b.Property<sbyte>("IsPaiy");

                    b.Property<string>("Note");

                    b.Property<string>("Oid");

                    b.Property<double>("PayableFee");

                    b.Property<sbyte?>("PaymentCash");

                    b.Property<sbyte>("PaymentWay");

                    b.Property<sbyte>("State");

                    b.Property<double>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("BbsOrder");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BrandId");

                    b.Property<DateTime?>("CheckTime");

                    b.Property<string>("CheckUserId");

                    b.Property<string>("Color");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("CreateUserId");

                    b.Property<string>("Description");

                    b.Property<string>("Feature");

                    b.Property<sbyte?>("IsCommend");

                    b.Property<sbyte?>("IsDel");

                    b.Property<sbyte?>("IsHot");

                    b.Property<sbyte?>("IsNew");

                    b.Property<sbyte?>("IsShow");

                    b.Property<string>("Keywords");

                    b.Property<string>("Name");

                    b.Property<string>("No");

                    b.Property<string>("PackageList");

                    b.Property<int?>("Sales");

                    b.Property<string>("Size");

                    b.Property<int?>("TypeId");

                    b.Property<double?>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("TypeId");

                    b.ToTable("BbsProduct");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsProvince", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BbsProvince");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsSku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColorId");

                    b.Property<DateTime?>("CreateTime");

                    b.Property<string>("CreateUserId");

                    b.Property<double?>("DeliveFee");

                    b.Property<int?>("LastStatus");

                    b.Property<string>("Location");

                    b.Property<double?>("MarketPrice");

                    b.Property<int>("ProductId");

                    b.Property<int?>("Sales");

                    b.Property<string>("Size");

                    b.Property<string>("SkuImg");

                    b.Property<string>("SkuName");

                    b.Property<double>("SkuPrice");

                    b.Property<int?>("SkuSort");

                    b.Property<int?>("SkuType");

                    b.Property<int?>("SkuUpperLimit");

                    b.Property<int>("StockInventory");

                    b.Property<DateTime?>("UpdateTime");

                    b.Property<string>("UpdateUserId");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("BbsSku");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsTown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BbsTown");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<sbyte>("IsDisplay");

                    b.Property<string>("Name");

                    b.Property<string>("Note");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("BbsType");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsAddr", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsBuyer", "Buyer")
                        .WithMany("BbsAddr")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeFirstEcom.BbsDetail", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsOrder", "Order")
                        .WithMany("BbsDetail")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeFirstEcom.BbsImg", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsProduct", "Product")
                        .WithMany("BbsImg")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsOrder", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsBuyer", "Buyer")
                        .WithMany("BbsOrder")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeFirstEcom.BbsProduct", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsBrand", "Brand")
                        .WithMany("BbsProduct")
                        .HasForeignKey("BrandId");

                    b.HasOne("CodeFirstEcom.BbsType", "Type")
                        .WithMany("BbsProduct")
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("CodeFirstEcom.BbsSku", b =>
                {
                    b.HasOne("CodeFirstEcom.BbsColor", "Color")
                        .WithMany("BbsSku")
                        .HasForeignKey("ColorId");

                    b.HasOne("CodeFirstEcom.BbsProduct", "Product")
                        .WithMany("BbsSku")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
